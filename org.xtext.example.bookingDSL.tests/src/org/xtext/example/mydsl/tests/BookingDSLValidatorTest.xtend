/*
 * generated by Xtext 2.24.0
 */
package org.xtext.example.mydsl.tests

import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import static org.junit.Assert.assertTrue
import org.xtext.example.mydsl.bookingDSL.BookingDSLPackage
import javax.inject.Inject
import org.xtext.example.mydsl.parser.antlr.BookingDSLParser
import org.xtext.example.mydsl.bookingDSL.impl.SystemImpl
import org.xtext.example.mydsl.bookingDSL.Resource
import org.xtext.example.mydsl.bookingDSL.Booking
import org.xtext.example.mydsl.bookingDSL.System
import org.xtext.example.mydsl.bookingDSL.Schedule
import org.xtext.example.mydsl.bookingDSL.Entity
import org.xtext.example.mydsl.bookingDSL.Attribute
import org.eclipse.xtext.testing.validation.ValidationTestHelper
import org.xtext.example.mydsl.validation.BookingDSLValidator

@ExtendWith(InjectionExtension)
@InjectWith(BookingDSLInjectorProvider)
class BookingDSLValidatorTest {
	@Inject extension ParseHelper<SystemImpl> parser
	
	@Inject extension ValidationTestHelper valAssertions
	
	@Test
	def void V01_testWarningWhenLowercaseNameOfDeclaration(){
		('''system S{
			resource r{
			
			}
		}''').parse.assertWarning(
			BookingDSLPackage::eINSTANCE.resource, 
			null, 
			"Name should start with capital since methods are directly associated in generation"
		)
		
	}
	
	@Test
	def void V02_testNoWarningsOrErrors(){
		('''system S{
			
		}''').parse.assertNoIssues
	}
}
